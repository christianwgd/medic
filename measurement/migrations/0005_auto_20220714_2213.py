# Generated by Django 4.0.6 on 2022-07-14 20:13

from django.db import migrations


def migrate_werte(apps, schema_editor):
    wert_model = apps.get_model('measurement', 'wert')
    value_model = apps.get_model('measurement', 'value')
    value_type_model = apps.get_model('measurement', 'valuetype')
    measurement_model = apps.get_model('measurement', 'measurement')

    rr_sys, _created = value_type_model.objects.get_or_create(
        slug='rrsys', defaults={
            'owner': None,
            'name': 'RR sys',
            'unit': 'mm/Hg',
            'decimals': 0,
            'sort_order': 0,
        },
    )
    rr_dia, _created = value_type_model.objects.get_or_create(
        slug='rrdia', defaults={
            'owner': None,
            'name': 'RR dia',
            'unit': 'mm/Hg',
            'decimals': 0,
            'sort_order': 1,
        },
    )
    puls, _created = value_type_model.objects.get_or_create(
        slug='puls', defaults={
            'owner': None,
            'name': 'Puls',
            'unit': '1/min',
            'decimals': 0,
            'sort_order': 2,
        },
    )
    temp, _created = value_type_model.objects.get_or_create(
        slug='temp', defaults={
            'owner': None,
            'name': 'Temp.',
            'unit': 'Â°C',
            'decimals': 1,
            'sort_order': 3,
        },
    )
    gew, _created = value_type_model.objects.get_or_create(
        slug='gewicht', defaults={
            'owner': None,
            'name': 'Gewicht',
            'unit': 'Kg',
            'decimals': 1,
            'sort_order': 4,
        },
    )

    for wert in wert_model.objects.all():
        measurement = measurement_model.objects.create(
            owner=wert.ref_usr,
            comment=wert.bemerkung,
        )
        measurement.date = wert.date
        measurement.save()

        if wert.rrsys:
            value_model.objects.create(
                measurement=measurement,
                value_type=rr_sys,
                value=wert.rrsys,
            )
        if wert.rrdia:
            value_model.objects.create(
                measurement=measurement,
                value_type=rr_dia,
                value=wert.rrdia,
            )
        if wert.puls:
            value_model.objects.create(
                measurement=measurement,
                value_type=puls,
                value=wert.puls,
            )
        if wert.temp:
            value_model.objects.create(
                measurement=measurement,
                value_type=temp,
                value=wert.temp,
            )
        if wert.gew:
            value_model.objects.create(
                measurement=measurement,
                value_type=gew,
                value=wert.gew,
            )


class Migration(migrations.Migration):

    dependencies = [
        ('measurement', '0004_measurement_valuetype_value'),
    ]

    operations = [
        migrations.RunPython(migrate_werte),
    ]
